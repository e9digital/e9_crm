.actions.top
  - if resource.persisted?
    - if resource.lead?
      = link_to 'Back to Leads', leads_path
    - else
      = link_to_destroy_resource(resource, :remote => false)

.field
  = f.label :name, nil, :class => :req
  = f.text_field :name
.field.select
  = f.label :category
  = f.select :category, MenuOption.options_for('Deal Category'), :include_blank => 'No Category'
.field
  = help_label(f, :info, :key => :markdown_help, :header => 'Markdown Help')
  = f.text_area :info
.field
  = f.label :value, nil, :class => :req
  = f.text_field :value, :value => f.object.value.to_s
.field.select
  = f.label :campaign, :for => 'deal_campaign_select', :class => 'req'
  = f.collection_select :campaign_id, Campaign.ordered.all, :id, :to_s, {:prompt => true}, :id => 'deal_campaign_select'
.field.select
  = f.label :status
  = f.select :status, Deal::Status::OPTIONS[1..-1]
.field.select
  = f.label :contacts
  %input#contact_autocomplete.list{:type => 'text', 'data-values' => resource.contact_ids.join(','), 'data-iname' => resource_instance_name, 'data-field' => '[contact_ids]'}
  %ul.select
    - f.object.contacts.each do |contact|
      %li.ui-state-default
        %span.content= contact.name
        %input{:type => :hidden, :name => "#{resource_instance_name}[contact_ids][]", :value => contact.id}
        %a{:class => :remove, :title => "Remove", :alt => "Remove"} Remove
.field.select
  = f.label :owner
  = f.select :contact_id, deal_contacts_array, { :prompt => true }, :id => :deal_owner 
.field
  Created At:
  = l(resource.created_at)
.field
  Closed At:
  = resource.closed_at ? l(resource.closed_at) : 'n/a'
.field
  Campaign Cost:
  = resource.campaign.try(:cost) || 0
.field
  Campaign Deal Count:
  = resource.campaign ? resource.campaign.non_leads.count : 0
.field
  Cost:
  = deal_cost(resource)
